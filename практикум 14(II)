// Решить задачу, разработав собственную структуру для хранения информации
// Исходная информация хранится в текстовом файле input.txt, каждая строка которого содержит полную информацию о некотором объекте; результирующая информация должна быть записана в файл output.txt.
//Для хранения данных внутри программы организовать массив структур. Сортировку данных реализовать, реализуя метод CompareTo(T) стандартного интерфейса IComparable<in T>
//На основе данных входного файла составить список сотрудников учреждения, включив следующие данные: ФИО, год принятия на работу, должность, зарплата, рабочий стаж.
// Вывести в новый файл информацию о сотрудниках, имеющих зарплату ниже определенного уровня, отсортировав их по рабочему стажу
using System;
using System.IO;

// Структура описывающая сотрудника
struct Work : IComparable<Work>
{
    public string fio, pos;
    public int year, exp, zp;

    public int CompareTo(Work other)
    {
        // Сортировка по рабочему стажу (exp) по возрастанию
        return exp.CompareTo(other.exp);
    }
}

class Program
{
    static void Main()
    {
        // Определенный уровень зарплаты
        int salary = 65000;
        // Массив для хранения данных о сотрудниках
        Work[] employees;
        // Чтение данных из файла
        using (StreamReader reader = new StreamReader("C:\\Users\\gelya\\OneDrive\\Рабочий стол\\сиакод\\input.txt"))
        {
            string line;
            int count = int.Parse(reader.ReadLine()); // Первая строка файла содержит количество сотрудников
            employees = new Work[count];

            for (int i = 1; i < count; i++)
            {
                line = reader.ReadLine();
                string[] splitLine = line.Split(';');

                employees[i].fio = splitLine[0];
                employees[i].year = int.Parse(splitLine[1]);
                employees[i].pos = splitLine[2];
                employees[i].zp = int.Parse(splitLine[3]);
                employees[i].exp = int.Parse(splitLine[4]);
            }
        }

        // Сортировка сотрудников по рабочему стажу
        Array.Sort(employees);

        // Запись информации о сотрудниках с зарплатой ниже определенного уровня в файл
        using (StreamWriter writer = new StreamWriter("C:\\Users\\gelya\\OneDrive\\Рабочий стол\\сиакод\\output.txt"))
        {
            foreach (var employee in employees)
            {
                if (employee.zp < salary)
                {
                    writer.WriteLine($"ФИО: {employee.fio}, Год принятия на работу: {employee.year}, Должность: {employee.pos}, Зарплата: {employee.zp}, Рабочий стаж: {employee.exp}");
                }
            }
        }
    }
}
