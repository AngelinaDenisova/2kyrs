Дана последовательность целых чисел (для хранения последовательности можно использовать одномерный массив
или любую другую подходящую коллекцию. Выбор структуры данных обосновать. Ввод вывод
данных – файловый). Вывести на экран все четные положительные числа, отсортировав их в порядке
возрастания с помощью LINQ запросов

using System;
using System.IO;
using System.Linq;

class Program
{
    static void Main()
    {
        char[] a = new char[] { ' ', '\n', '\t', '\r' };
        string lines = File.ReadAllText("C:\\Users\\gelya\\OneDrive\\Рабочий стол\\сиакод\\pr151.txt");
        string[] numbers = lines.Split(a, StringSplitOptions.RemoveEmptyEntries);
        

        // LINQ запрос для фильтрации четных положительных чисел и их сортировки
        var result = from number in numbers
                     where int.Parse(number) > 0 && int.Parse(number) % 2 == 0
                     orderby number
                     select number;

        // Вывод отсортированных четных положительных чисел
        using (StreamWriter writer = new StreamWriter("C:\\Users\\gelya\\OneDrive\\Рабочий стол\\сиакод\\pr15out.txt"))
        {
            foreach (var number in result)
            {
                writer.WriteLine(number);
            }
        }
    }
