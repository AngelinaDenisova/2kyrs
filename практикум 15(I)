Дана последовательность целых чисел (для хранения последовательности можно использовать одномерный массив
или любую другую подходящую коллекцию. Выбор структуры данных обосновать. Ввод вывод
данных – файловый). Вывести на экран все четные положительные числа, отсортировав их в порядке
возрастания с помощью LINQ запросов

using System;
using System.IO;
using System.Linq;

class Program
{
    static void Main()
    {
        string[] lines = File.ReadAllLines("C:\\Users\\gelya\\OneDrive\\Рабочий стол\\сиакод\\pr151.txt"); // Замените "input.txt" на имя вашего файла

        var numbers = lines.SelectMany(line => line.Split(' ')) // Разбиваем каждую строку на подстроки
                           .Where(str => !string.IsNullOrEmpty(str)) // Удаляем пустые элементы
                           .Select(int.Parse); // Преобразуем каждую подстроку в число

        var evenPositiveNumbers = numbers.Where(num => num > 0 && num % 2 == 0) // Фильтруем четные положительные числа
                                         .OrderBy(num => num); // Сортируем числа по возрастанию

        // Записываем отсортированные четные положительные числа в файл
        using (StreamWriter writer = new StreamWriter("C:\\Users\\gelya\\OneDrive\\Рабочий стол\\сиакод\\pr15out.txt"))
        {
            foreach (var number in evenPositiveNumbers)
            {
                writer.WriteLine(number); // Записываем число в файл
            }
        }

        Console.WriteLine("Результаты были записаны в файл pr15out.txt");
    }
}
